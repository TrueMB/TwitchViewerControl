/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://hub.jeff-media.com/nexus/repository/jeff-media-public/')
    }

    maven {
        url = uri('https://mvn.lumine.io/repository/maven-public/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.bstats:bstats-bukkit:2.2.1'
    implementation 'com.jeff_media:SpigotUpdateChecker:3.0.0'
    implementation 'com.github.twitch4j:twitch4j:1.12.0'
    implementation 'com.github.philippheuer.events4j:events4j-handler-reactor:0.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.1'
    api 'org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT'
    api 'io.lumine:Mythic-Dist:5.2.0'
}

group = 'TwitchViewerControl'
version = '0.0.4'
description = 'TwitchViewerControl'
java.sourceCompatibility = JavaVersion.VERSION_17

sourceSets {
    main { 
        java { srcDirs = ["src/main/java"] }
        resources { srcDir "src/main/resources" }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(Copy).all { 
	duplicatesStrategy 'exclude' 
}
tasks.withType(Jar).all { 
	duplicatesStrategy 'exclude' 
}

jar {
    from {
        configurations.compileClasspath.findAll { file ->
            //project.logger.lifecycle("File: ${file.name}")
	        file.name != "spigot-api-1.16.4-R0.1-SNAPSHOT.jar"
	        file.name != "Mythic-Dist-5.2.0.jar"
    	}.sort { it.name }
            .collect { file ->
                file.isDirectory() ? file : zipTree(file)
            }
    }
}
